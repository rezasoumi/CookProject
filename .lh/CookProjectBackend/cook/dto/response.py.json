{
    "sourceFile": "CookProjectBackend/cook/dto/response.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1678449572513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1678449582878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n         self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n         if detail_obj:\r\n             self.data.update(detail_obj.data_dict)\r\n         super().__init__(self.data)\r\n-class ObjectInfoResponse(BaseResponse):\r\n+class FInfoResponse(BaseResponse):\r\n     def __init__(self, obj, detail_obj=None):\r\n         self.data: dict = obj.data_dict\r\n         self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n         if detail_obj:\r\n"
                },
                {
                    "date": 1678449598086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,12 @@\n \r\n class ObjectInfoResponse(BaseResponse):\r\n     def __init__(self, obj, detail_obj=None):\r\n         self.data: dict = obj.data_dict\r\n-        self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n         if detail_obj:\r\n             self.data.update(detail_obj.data_dict)\r\n         super().__init__(self.data)\r\n-class FInfoResponse(BaseResponse):\r\n+class FoodInfoResponse(BaseResponse):\r\n     def __init__(self, obj, detail_obj=None):\r\n         self.data: dict = obj.data_dict\r\n         self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n         if detail_obj:\r\n"
                }
            ],
            "date": 1678449572513,
            "name": "Commit-0",
            "content": "from enum import Enum\r\nfrom cook.models import *\r\n\r\nfrom simplejson import dumps as jw\r\n\r\n\r\nclass InternalError(Enum):\r\n    ALREADY_REPORTED = (208, \"این عملیات همینک انجام شده‌است.\")\r\n    CREDENTIAL_MISMATCH = (404, \"چنین اطلاعات حسابی ثبت نشده‌است.\")\r\n    ACCOUNT_EXISTS = (409, \"چنین حسابی همینک وجود دارد.\")\r\n    NO_MATCH = (404, \"نتیجه‌ای یافت نشد.\")\r\n    FOODSTUFF_EXISTS = (409, \"این قلم خوراکی در حال حاضر وجود دارد.\")\r\n    INGREDIENT_EXISTS = (409, \"این ماده غذایی در حال حاضر وجود دارد.\")\r\n    FOODSTUFF_NOT_FOUND = (409, \"این قلم خوراکی یافت نشد.\")\r\n    INGREDIENT_NOT_FOUND = (409, \"ماده غذایی یافت نشد.\")\r\n    RECIPE_NOT_FOUND = (409, \"دستور غذایی یافت نشد.\")\r\n    CATEGORY_EXIST = (409, \"این دسته غذایی در حال حاضر وجود دارد.\")\r\n    RECIPE_EXIST = (409, \"این دستور غذایی در حال حاضر وجود دارد.\")\r\n    ACCOUNT_NOT_FOUND = (404, \"چنین حسابی وجود ندارد.\")\r\n    TICKET_NOT_FOUND = (404, \"چنین تیکتی ثبت نشده است.\")\r\n    UNAUTHORIZED = (401, \"شما دسترسی لازم را ندارید.\")\r\n    NOT_ALLOWED = (405, \"عملیات مجاز نیست.\")\r\n    FORUM_NOT_FOUND = (404, \"چنین فورومی ایجاد نشده است.\")\r\n    BANNED_USER = (405, \"شما از پیوستن به این فوروم بازداشته‌ شده‌اید.\")\r\n    COMMENT_NOT_FOUND = (404, \"چنین نظری ثبت نشده‌است.\")\r\n    CANNOT_RATE_SELF = (405, \"شما نمی‌توانید به دستور خود امتیاز دهید\")\r\n    RATING_TWICE = (405, \"شما نمی‌توانید دوبار به یک دستور امتیاز دهید\")\r\n\r\n    def get_code(self):\r\n        return self.value[0]\r\n\r\n\r\nclass BaseResponse:\r\n    def __init__(self, data):\r\n        self.json = jw(data)\r\n\r\n\r\nclass ErrorResponse(BaseResponse):\r\n    def __init__(self, error: InternalError):\r\n        error_code, error_message = error.value[0], error.value[1]\r\n        self.data = dict(err_c=error_code, err_msg=error_message)\r\n        super().__init__(self.data)\r\n\r\n\r\nclass CreationResponse(BaseResponse):\r\n    def __init__(self, object_id):\r\n        self.data = dict(id=object_id)\r\n        super().__init__(self.data)\r\n\r\n\r\nclass ObjectInfoResponse(BaseResponse):\r\n    def __init__(self, obj, detail_obj=None):\r\n        self.data: dict = obj.data_dict\r\n        self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n        if detail_obj:\r\n            self.data.update(detail_obj.data_dict)\r\n        super().__init__(self.data)\r\nclass ObjectInfoResponse(BaseResponse):\r\n    def __init__(self, obj, detail_obj=None):\r\n        self.data: dict = obj.data_dict\r\n        self.data['ingredients'] = [x.data_dict for x in obj.ingredients.all()]\r\n        if detail_obj:\r\n            self.data.update(detail_obj.data_dict)\r\n        super().__init__(self.data)\r\n\r\n\r\nclass ObjectListResponse(BaseResponse):\r\n    def __init__(self, objects):\r\n        self.data = [obj.data_dict for obj in objects]\r\n        super().__init__(self.data)\r\n\r\n\r\nclass ForumDetailedResponse(BaseResponse):\r\n    def __init__(self, forum: Forum):\r\n        self.data = forum.data_dict\r\n        self.data['members'] = [member.data_dict for member in forum.members.all()]\r\n        self.data['messages'] = [message.data_dict for message in forum.forummessage_set.all()]\r\n        super().__init__(self.data)\r\n\r\n\r\nclass RecipeDetailedResponse(BaseResponse):\r\n    def __init__(self, recipes):\r\n        self.data = []\r\n        for recipe in recipes:\r\n            recipe: Recipe\r\n            r_data = recipe.data_dict\r\n            r_data['ingredients'] = [ingredient.data_dict for ingredient in recipe.ingredients.all()]\r\n            self.data.append(r_data)\r\n        super().__init__(self.data)\r\n"
        }
    ]
}